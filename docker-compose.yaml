volumes:
  postgres-data:
      external: true
services:
  postgres:
    build:
        context: ./relational-data
        dockerfile: ./Dockerfile.dev
    volumes:
        - postgres-data:/var/lib/postgresql/data
    environment:
        - POSTGRES_MULTIPLE_DATABASES=gamma, accounts
        - POSTGRES_PASSWORD=test-databases
    ports:
        - 15432:5432
  api:
    build:
        context: ./api
        dockerfile: ./Dockerfile.dev
    ports:
        - "8000:8000"
    volumes:
        - ./api:/app
    environment:
      DATABASE_URL: postgresql://gamma:password@postgres/gamma
      WAIT_HOSTS: postgres:5432
      PORT: 8000
      SIGNING_KEY: ASLDKFJASL;FKAS;L

  accounts_api:
    build:
        context: ./accounts_api
        dockerfile: ./Dockerfile.dev
    ports:
        - "8100:8100"
    volumes:
        - ./accounts_api:/app
    environment:
      DATABASE_URL: postgresql://accounts:password@postgres/accounts
      WAIT_HOSTS: postgres:5432
      PORT: 8100
      SIGNING_KEY: ASLDKFJASL;FKAS;L

  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_ACCOUNTS_API_HOST: http://localhost:8100
      REACT_APP_PATIENTS_API_HOST: http://localhost:8000
